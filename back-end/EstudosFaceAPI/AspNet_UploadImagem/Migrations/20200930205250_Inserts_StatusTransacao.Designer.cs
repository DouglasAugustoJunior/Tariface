// <auto-generated />
using System;
using AspNet_UploadImagem.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNet_UploadImagem.Migrations
{
    [DbContext(typeof(ContextoDBAplicacao))]
    [Migration("20200930205250_Inserts_StatusTransacao")]
    partial class Inserts_StatusTransacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNet_UploadImagem.Models.Cartao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<int>("CSV")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Titular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CPF");

                    b.ToTable("Cartao","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Endereco", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CEP")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MunicipioID")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MunicipioID");

                    b.ToTable("Endereco","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.GrupoPessoa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IDAzure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GrupoPessoa","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Historico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("TipoID")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnName("Valor")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ID");

                    b.HasIndex("CPF");

                    b.HasIndex("StatusID");

                    b.HasIndex("TipoID");

                    b.ToTable("Historico","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Imagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersistedFaceID")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CPF");

                    b.ToTable("Imagem","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Municipio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UfID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UfID");

                    b.ToTable("Municipio","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Regiao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Regiao","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.StatusTransacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StatusTransacao","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.TipoTransacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoTransacao","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.UF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegiaoID")
                        .HasColumnType("int");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RegiaoID");

                    b.ToTable("UF","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnderecoID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoPessoaID")
                        .HasColumnType("int");

                    b.Property<int?>("ImagemPerfilID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Saldo")
                        .HasColumnName("Saldo")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EnderecoID");

                    b.HasIndex("GrupoPessoaID");

                    b.HasIndex("ImagemPerfilID");

                    b.ToTable("Usuario","dbo");
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Cartao", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.Usuario", "Usuario")
                        .WithMany("Cartoes")
                        .HasForeignKey("CPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Endereco", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.Municipio", "Municipio")
                        .WithMany("Enderecos")
                        .HasForeignKey("MunicipioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Historico", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.Usuario", "Usuario")
                        .WithMany("Historicos")
                        .HasForeignKey("CPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_UploadImagem.Models.StatusTransacao", "StatusTransacao")
                        .WithMany("Historicos")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_UploadImagem.Models.TipoTransacao", "TipoTransacao")
                        .WithMany("Historicos")
                        .HasForeignKey("TipoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Imagem", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.Usuario", "Usuario")
                        .WithMany("Imagens")
                        .HasForeignKey("CPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Municipio", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.UF", "UF")
                        .WithMany("Municipios")
                        .HasForeignKey("UfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.UF", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.Regiao", "Regiao")
                        .WithMany("UFs")
                        .HasForeignKey("RegiaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNet_UploadImagem.Models.Usuario", b =>
                {
                    b.HasOne("AspNet_UploadImagem.Models.Endereco", "Endereco")
                        .WithMany("Usuarios")
                        .HasForeignKey("EnderecoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_UploadImagem.Models.GrupoPessoa", "GrupoPessoa")
                        .WithMany("Usuarios")
                        .HasForeignKey("GrupoPessoaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNet_UploadImagem.Models.Imagem", "ImagemPerfil")
                        .WithMany()
                        .HasForeignKey("ImagemPerfilID");
                });
#pragma warning restore 612, 618
        }
    }
}
